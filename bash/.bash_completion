__source_completion() {
  local target=$1
  if [ -f "$target" ]; then
    source "$target"
  fi
}

__my_bash_completion_() {

  local bash_completion_cache_dir="${HOME:?}/.cache/bash-completion"
  mkdir -p "$bash_completion_cache_dir"

  if type docker >/dev/null 2>&1; then
    local docker_completion=$bash_completion_cache_dir/docker
    if [ ! -f "$docker_completion" ]; then
      curl -sSL https://raw.githubusercontent.com/docker/cli/master/contrib/completion/bash/docker >"$docker_completion"
    fi
    __source_completion "$docker_completion"
  fi

  if type docker-compose >/dev/null 2>&1; then
    local docker_compose_completion=$bash_completion_cache_dir/docker-compose
    if [ ! -f "$docker_compose_completion" ]; then
      curl -sSL https://raw.githubusercontent.com/docker/compose/master/contrib/completion/bash/docker-compose >"$docker_compose_completion"
    fi
    __source_completion "$docker_compose_completion"
  fi

  if type kubectl >/dev/null 2>&1; then
    local kubectl_completion=$bash_completion_cache_dir/kubectl
    if [ ! -f "$kubectl_completion" ]; then
      kubectl completion bash >"$kubectl_completion"
    fi
    __source_completion "$kubectl_completion"
  fi

  if type npm >/dev/null 2>&1; then
    local npm_completion=$bash_completion_cache_dir/npm
    if [ ! -f "$npm_completion" ]; then
      npm completion >"$npm_completion"
    fi
    __source_completion "$npm_completion"
  fi

  if type pip3 >/dev/null 2>&1; then
    local pip3_completion=$bash_completion_cache_dir/pip3
    if [ ! -f "$pip3_completion" ]; then
      pip3 completion --bash >"$pip3_completion"
    fi
    __source_completion "$pip3_completion"
  fi

  if type pipenv >/dev/null 2>&1; then
    local pipenv_completion=$bash_completion_cache_dir/pipenv
    if [ ! -f "$pipenv_completion" ]; then
      pipenv --completion >"$pipenv_completion"
    fi
    __source_completion "$pipenv_completion"
  fi

  if type bazel >/dev/null 2>&1; then
    local bazel_completion=$bash_completion_cache_dir/bazel
    if [ ! -f "$bazel_completion" ]; then
      local bazel_completion_origin=$HOME/.bazel/bin/bazel-complete.bash
      if [ -f "$bazel_completion_origin" ]; then
        cp "$bazel_completion_origin" "$bazel_completion"
      fi
    fi
    __source_completion "$bazel_completion"
  fi

  if type rustup >/dev/null 2>&1; then
    local rustup_completion=$bash_completion_cache_dir/rustup
    if [ ! -f "$rustup_completion" ]; then
      rustup completions bash >"$rustup_completion"
    fi
    __source_completion "$rustup_completion"
  fi

  if type cargo >/dev/null 2>&1; then
    local cargo_completion=$bash_completion_cache_dir/cargo
    if [ ! -f "$cargo_completion" ]; then
      curl -sSL https://raw.githubusercontent.com/rust-lang/cargo/master/src/etc/cargo.bashcomp.sh >"$cargo_completion"
    fi
    __source_completion "$cargo_completion"
  fi

  if type az >/dev/null 2>&1; then
    local az_completion=$bash_completion_cache_dir/az
    if [ ! -f "$az_completion" ]; then
      curl -sSL https://raw.githubusercontent.com/Azure/azure-cli/dev/az.completion >"$az_completion"
    fi
    __source_completion "$az_completion"
  fi

  if type brew >/dev/null 2>&1; then
    local brew_completion=$bash_completion_cache_dir/brew
    if [ ! -f "$brew_completion" ]; then
      curl -sSL https://raw.githubusercontent.com/Homebrew/brew/master/completions/bash/brew >"$brew_completion"
    fi
    __source_completion "$brew_completion"
  fi

  if type hugo >/dev/null 2>&1; then
    local hugo_completion=$bash_completion_cache_dir/hugo
    if [ ! -f "$hugo_completion" ]; then
      hugo gen autocomplete --completionfile "$hugo_completion" >/dev/null 2>&1
    fi
    __source_completion "$hugo_completion"
  fi

  if type dbdeployer >/dev/null 2>&1; then
    local dbdeployer_completion=$bash_completion_cache_dir/dbdeployer
    if [ ! -f "$dbdeployer_completion" ]; then
      curl -sSL https://raw.githubusercontent.com/datacharmer/dbdeployer/master/docs/dbdeployer_completion.sh >"$dbdeployer_completion"
    fi
    __source_completion "$dbdeployer_completion"
  fi

  if type kubectx >/dev/null 2>&1; then
    local kubectx_completion=$bash_completion_cache_dir/kubectx
    if [ ! -f "$kubectx_completion" ]; then
      curl -sSL https://raw.githubusercontent.com/ahmetb/kubectx/master/completion/kubectx.bash > "$kubectx_completion"
    fi
    __source_completion "$kubectx_completion"
  fi

  if type kubens >/dev/null 2>&1; then
    local kubens_completion=$bash_completion_cache_dir/kubens
    if [ ! -f "$kubens_completion" ]; then
      curl -sSL https://raw.githubusercontent.com/ahmetb/kubectx/master/completion/kubens.bash > "$kubens_completion"
    fi
    __source_completion "$kubens_completion"
  fi
}

__my_bash_completion_
