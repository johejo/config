[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'chrisbra/vim-zsh'
on_ft = 'zsh'

[[plugins]]
repo = 'chr4/nginx.vim'
on_ft = 'nginx'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = 'markdown'

[[plugins]]
repo = 'previm/previm'
on_ft = 'markdown'

[[plugins]]
repo = 'godlygeek/tabular'
on_ft = 'markdown'

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = 'terraform'

[[plugins]]
repo = 'keith/swift.vim'
on_ft = 'swift'

[[plugins]]
repo = 'reasonml-editor/vim-reason-plus'
on_ft = 'reason'

[[plugins]]
repo = 'udalov/kotlin-vim'
on_ft = 'kotlin'

[[plugins]]
repo = 'johejo/gomod.vim'
on_ft = 'gomod'

[[plugins]]
repo = 'yuezk/vim-js'
on_ft = ['javascript', 'javascriptreact', 'typescript', 'typescriptreact']

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'
on_ft = ['typescript', 'typescriptreact']

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascriptreact', 'typescriptreact']
depends = ['vim-js', 'yats.vim']
hook_add = '''
let g:vim_jsx_pretty_colorful_config = 1
let g:vim_jsx_pretty_highlight_close_tag = 1
'''

[[plugins]]
repo = 'mattn/vim-goimports'
on_ft = 'go'
hook_add = '''
augroup MyAutoCmd
  autocmd!
  autocmd BufNewFile,BufRead *.go setlocal noexpandtab tabstop=4 shiftwidth=4
augroup END
if !executable('goimports')
  execute '!go get golang.org/x/tools/cmd/goimports'
endif
'''

[[plugins]]
repo = 'mattn/vim-goaddtags'
on_ft = 'go'
hook_add = '''
if !executable('gomodifytags')
  execute '!go get github.com/fatih/gomodifytags'
endif
'''

[[plugins]]
repo = 'mattn/vim-goimpl'
on_ft = 'go'
hook_add = '''
if !executable('impl')
  execute '!go get github.com/josharian/impl'
endif
'''

# [[plugins]]
# repo = 'lambdalisue/suda.vim'
# on_event = 'BufRead'
# hook_add = '''
# let g:suda_smart_edit = 1
# '''

[[plugins]]
repo = 'osyo-manga/vim-jplus'
on_map = {n = '<Plug>'}
hook_add = '''
nmap J <Plug>(jplus)
'''
[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap I  <Plug>(niceblock-I)
  xmap A  <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'Shougo/vinarise.vim'
on_cmd = 'Vinarise'
hook_add = '''
let g:vinarise_enable_auto_detect = 1
let g:vinarise_guifont = 'Courier\ 10\ Pitch:h14'
'''

[[plugins]]
repo = 'ujihisa/neco-look'
depends = ['deoplete.nvim']
on_source = 'deoplete.nvim'

[[plugins]]
repo = 'Shougo/neco-syntax'
depends = ['deoplete.nvim']
on_source = 'deoplete.nvim'

[[plugins]]
repo = 'hrsh7th/vim-neco-calc'
depends = ['deoplete.nvim']
on_source = 'deoplete.nvim'

[[plugins]]
repo = 'Shougo/neco-vim'
depends = ['deoplete.nvim']
on_ft = 'vim'

[[plugins]]
repo = 'ncm2/float-preview.nvim'
on_if = 'has("nvim")'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
nnoremap <silent> do :Denite file/old<CR>
nnoremap <silent> dr :Denite file/rec<CR>
nnoremap <silent> db :Denite buffer<CR>

augroup MyDenite
  au!
  autocmd FileType denite call s:denite_my_settings()
augroup END

function! s:denite_my_settings() abort
  nnoremap <silent><buffer><expr> <CR> denite#do_map('do_action')
  nnoremap <silent><buffer><expr> d denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> p denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> q denite#do_map('quit')
  nnoremap <silent><buffer><expr> <ESC> denite#do_map('quit')
  nnoremap <silent><buffer><expr> <C-c> denite#do_map('quit')
  nnoremap <silent><buffer><expr> i denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> <Space> denite#do_map('toggle_select').'j'
  nnoremap <silent><buffer><expr> t denite#do_map('do_action', 'tabopen')
  nnoremap <silent><buffer><expr> s denite#do_map('do_action', 'split')
  nnoremap <silent><buffer><expr> v denite#do_map('do_action', 'vsplit')
endfunction
'''
hook_source = '''
source ~/.config/vim/denite.vim
'''

[[plugins]]
repo = 'raghur/fruzzy'
on_source = 'denite.nvim'
hook_post_update = 'call fruzzy#install()'

[[plugins]]
repo = 'Shougo/defx.nvim'
depends = ['vim-choosewin']
hook_add = '''
source ~/.config/vim/defx.vim
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
depends = ['denite.nvim']
on_source = 'denite.nvim'
hook_add = '''
source ~/.config/vim/deol.vim
'''

[[plugins]]
repo = 'Jagua/vim-denite-ghq'
depends = ['denite.nvim']
on_source = 'denite.nvim'
hook_add = '''
nnoremap gq :Denite ghq<CR>
'''

# [[plugins]]
# repo = 'neovim/nvim-lsp'
# on_if = 'has("nvim")'
# hook_source = '''
# " :luafile ~/.config/nvim/init.lua
# " source ~/.config/vim/nvim_lsp.vim
# '''
#
# [[plugins]]
# repo = 'Shougo/deoplete-lsp'
# depends = ['nvim-lsp', 'deoplete.nvim']
# on_source = 'nvim-lsp'

[[plugins]]
repo = 'dense-analysis/ale'
on_event = 'BufWritePost'
hook_add = '''
source ~/.config/vim/ale.vim
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
hook_add = '''
let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'lighttiger2505/deoplete-vim-lsp'
on_source = 'deoplete.nvim'

[[plugins]]
repo = 'chrisbra/Colorizer'
on_if = '!has("nvim")'

[[plugins]]
repo = 'norcalli/nvim-colorizer.lua'
on_cmd = ['ColorizerAttachToBuffer', 'ColorizerDetachFromBuffer', 'ColorizerReloadAllBuffers']
on_if = 'has("nvim")'
hook_source = '''
set termguicolors
lua require'colorizer'.setup()
'''
